spring:
  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/checkin?useSSL=true&requireSSL=false&verifyServerCertificate=false&serverTimezone=UTC&socketTimeout=30000&connectTimeout=10000}
    username: ${DB_USERNAME:}
    password: ${DB_PASSWORD:}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      # Tiempo máximo de espera para obtener una conexión del pool (10 segundos)
      connection-timeout: 10000
      # Tiempo máximo de inactividad de una conexión (4 segundos, menos de 5 que es el límite del servidor)
      idle-timeout: 4000
      # Tiempo máximo de vida de una conexión (20 segundos)
      max-lifetime: 20000
      # Validar conexiones al obtenerlas del pool
      auto-commit: true
      # Validar conexiones antes de usarlas
      validate: true
      # Tamaño mínimo del pool de conexiones
      minimum-idle: 2
      # Tamaño máximo del pool de conexiones
      maximum-pool-size: 10
      # Consulta para validar conexiones
      connection-test-query: SELECT 1
      # Tiempo de espera para validación (2 segundos)
      validation-timeout: 2000
      # Frecuencia para mantener vivas las conexiones (cada 2 segundos)
      keepalive-time: 2000
      # No fallar si no se pueden crear conexiones iniciales
      initialization-fail-timeout: 0
      # Comando a ejecutar al crear una conexión
      connection-init-sql: SELECT 1
      # Umbral para detectar fugas de conexión (4 segundos)
      leak-detection-threshold: 4000
      # Nombre del pool para logs
      pool-name: HikariCP
      # Configuración adicional para manejo de conexiones
      data-source-properties:
        # Configuración de timeouts
        socketTimeout: 30000
        connectTimeout: 10000
        # Reconexión automática
        autoReconnect: true
        maxReconnects: 3
        initialTimeout: 5
        # SSL
        useSSL: true
        requireSSL: true
        verifyServerCertificate: true
        # Caché de consultas
        useServerPrepStmts: true
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        # Otras optimizaciones
        useCursorFetch: true
        maintainTimeStats: false
        useLocalTransactionState: true
        useReadAheadInput: false
        # ✅ ELIMINÉ LA LÍNEA DUPLICADA maintainTimeStats: false
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          time_zone: UTC
          batch_size: 20
        connection:
          provider_disables_autocommit: true
    open-in-view: false
  cache:
    caffeine:
      spec: initialCapacity=100,maximumSize=1000,expireAfterWrite=10m

server:
  port: ${PORT:8080}

logging:
  level:
    com.andesairlines: INFO
    org.springframework.cache: INFO
    org.springframework.retry: INFO
    org.springframework.web: INFO
    root: INFO